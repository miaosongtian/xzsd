<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.hotGoods.dao.HotGoodsDao">
    <!--统计轮商品编号数量-->
    <select id="countGoodsId" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select count(goods_id)
        from t_info_hot_goods
        where is_deleted = 0
        and goods_id = #{goodsId}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>
    </select>

    <!--统计轮热门商品序号数量-->
    <select id="countSort" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="int">
        select count(hot_goods_num)
        from t_info_hot_goods
        where is_deleted = 0
        and hot_goods_num = #{hotGoodsNum}
        <if test="hotGoodsId != null and hotGoodsId != ''">
            and hot_goods_id != #{hotGoodsId}
        </if>
    </select>

    <!--新增热门商品-->
    <insert id="addHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        insert into t_info_hot_goods
            (
            hot_goods_id,
            hot_goods_num,
            goods_id,
            is_deleted,
            create_time,
            create_user,
            update_time,
            update_user,
            version)
        values
            (
            #{hotGoodsId},
            #{hotGoodsNum},
            #{goodsId},
            #{isDeleted},
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0)
    </insert>

    <!--删除热门商品-->
    <update id="deleteHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_info_hot_goods
        set
            is_deleted  = 1,
            update_time = now(),
            update_user = #{userCode},
            version     = version + 1
        where hot_goods_id in
        <foreach item="hotGoodsId" index="index" collection="listId" open="(" separator="," close=")">
            #{hotGoodsId}
        </foreach>
    </update>

    <!--修改热门商品-->
    <update id="updateHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        update t_info_hot_goods
        set
            goods_id      = #{goodsId},
            hot_goods_num = #{hotGoodsNum},
            update_user   = #{lastModifiedBy},
            version       = version + 1
        where hot_goods_id = #{hotGoodsId}
        and version = #{version}
    </update>

    <!--查询热门商品详情信息-->
    <select id="getHotGoods" parameterType="java.lang.String" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
            a.hot_goods_num hotGoodsNum,
            a.goods_id goodsId,
            b.goods_name goodsName,
            a.hot_goods_id hotGoodsId,
            a.version
        from t_info_hot_goods a
        left join t_info_goods b
        on a.goods_id = b.goods_id
        where a.hot_goods_id = #{hotGoodsId}
        and a.is_deleted = 0
    </select>

    <!--分页查询热门商品列表-->
    <select id="listHotGoods" parameterType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo" resultType="com.xzsd.pc.hotGoods.entity.HotGoodsInfo">
        select
            a.hot_goods_num hotGoodsNum,
            a.goods_id goodsId,
            b.goods_name goodsName,
            b.goods_price goodsPrice,
            b.goods_describe goodsDescribe,
            a.hot_goods_id hotGoodsId,
            a.version
        from t_info_hot_goods a
        left join t_info_goods b
        on a.goods_id = b.goods_id
        where a.is_deleted = 0
        and b.is_deleted = 0
        <if test="goodsName != null and goodsName != ''">
            and b.goods_name like concat('%', #{goodsName}, '%')
        </if>
        <if test="goodsId != null and goodsId != ''">
            and b.goods_id like concat('%', #{goodsId}, '%')
        </if>
        order by a.create_time desc
    </select>

    <!--分页查询轮播图列表-->
    <select id="listSlideshowHome" parameterType="com.xzsd.pc.slideshowHome.entity.SlideshowHomeInfo" resultType="com.xzsd.pc.slideshowHome.entity.SlideshowHomeInfo">
        select
            a.slideshow_num slideshowNum,
            a.slideshow_path slideshowPath,
            a.slideshow_state_id slideshowStateId,
            a.start_time startTime,
            a.end_time endTime,
            a.slideshow_id slideshowId,
            a.version
        from t_info_slideshow_home a
        where a.is_deleted = 0
        <if test="slideshowId != null and slideshowId != ''">
            and a.slideshow_id like concat('%', #{slideshowId}, '%')
        </if>
        order by a.create_time desc
    </select>

    <update id="updateSlideshowHomeState" parameterType="java.util.List">
        <foreach item="item" index="index" collection="listUpdata" open="" separator=";" close=";">
            update t_info_slideshow_home
            set
                slideshow_state_id = #{item.slideshowStateId},
                update_time    = now(),
                update_user    = #{item.userCode},
                version        = version + 1
            where slideshow_id = #{item.slideshowId}
            and version = #{item.version}
        </foreach>
    </update>
</mapper>