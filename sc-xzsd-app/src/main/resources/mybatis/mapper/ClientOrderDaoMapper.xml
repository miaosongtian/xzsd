<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.clientOrder.dao.ClientOrderDao">
    <!--新增订单-->
    <insert id="addOrderDetail" parameterType="java.util.List">
            insert into t_info_order_deepen
                (order_goods_id,
                order_id,
                goods_id,
                goods_price,
                goods_count,
                is_deleted,
                create_time,
                create_user,
                version)
            values
            <foreach collection="listGoodsAdd" item="item" index="index" separator=",">
                    (#{item.orderDetailId},
                    #{item.orderId},
                    #{item.goodsId},
                    #{item.goodsPrice},
                    #{item.clientGoodsNum},
                    0,
                    now(),
                    #{item.createBy},
                    0)
            </foreach>
    </insert>

    <!--新增订单-->
    <insert id="addOrder" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo">
        insert into t_info_order
            (
            order_id,
            order_state,
            store_id,
            order_goods_num,
            order_all_cost,
            is_deleted,
            create_time,
            create_user,
            update_time,
            update_user,
            version
            )
        values
            (
            #{orderId},
            0,
            #{storeId},
            #{orderAllGoodsCount},
            #{orderAllCost},
            0,
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0
            )
    </insert>

    <!--resultMap映射-->
    <resultMap type="com.xzsd.app.clientOrder.entity.ClientOrderOutput" id="list">
        <id property="orderId" column="orderId"/>
        <result property="orderStateId" column="orderStateId"/>
        <result property="orderAllCost" column="orderAllCost"/>
        <result property="orderAllGoodsCount" column="orderAllGoodsCount"/>
        <result property="storeName" column="storeName"/>
        <result property="address" column="address"/>
        <result property="crateTime" column="crateTime"/>
        <result property="version" column="version"/>
        <collection property="goodsList" ofType="com.xzsd.app.clientOrder.entity.GoodsList" select="selectList" column="orderId">
            <id property="orderGoodsId" column="orderGoodsId"/>
            <result property="goodsName" column="goodsName"/>
            <result property="goodsImagePath" column="goodsImagePath"/>
            <result property="goodsDescribe" column="goodsDescribe"/>
            <result property="goodsPrice" column="goodsPrice"/>
            <result property="cartGoodsCount" column="cartGoodsCount"/>
            <result property="goodsId" column="goodsId"/>
        </collection>
    </resultMap>
    <!--分页查询订单列表-->
    <select id="listOrder" parameterType="com.xzsd.app.clientOrder.entity.ClientOrderInfo" resultMap="list">
        select
            order_id orderId,
            order_all_cost orderAllCost,
            order_state orderStateId,
            order_goods_num orderAllGoodsCount,
            version version
        from t_info_order
        where is_deleted = 0
        and create_user = #{createBy}
        <if test="orderStateId != null and orderStateId != ''">
            and order_state like concat('%', #{orderStateId}, '%')
        </if>
        order by create_time desc
    </select>
    <select id="selectList" parameterType="java.lang.String" resultType="com.xzsd.app.clientOrder.entity.GoodsList">
        select
            a.goods_id goodsId,
            a.goods_count cartGoodsCount,
            b.goods_name goodsName,
            b.goods_image_path goodsImagePath,
            b.goods_describe goodsDescribe,
            b.goods_price goodsPrice
        from t_info_order_deepen a
        left join t_info_goods b
        on a.goods_id = b.goods_id
        where a.is_deleted = 0
        and a.order_id = #{orderId}
        order by a.create_time desc
    </select>

    <!--修改订单状态-->
    <update id="updateOrderState" parameterType="java.util.List">
        <foreach item="item" index="index" collection="listUpdata" open="" separator=";" close=";">
            update t_info_order
            <set>
                order_state = #{item.orderStateId},
                update_time = now(),
                update_user = #{item.lastModifiedBy},
                version     = version + 1
            </set>
            where order_id = #{item.orderId}
            and version = #{item.version}
        </foreach>
    </update>

    <!--查询订单详情信息-->
    <select id="listOrderDeepen" parameterType="java.lang.String" resultType="com.xzsd.app.clientOrder.entity.ClientOrderOutput">
        select
            a.order_id orderId,
            b.store_name storeName,
            b.address address,
            a.order_all_cost orderAllCost,
            a.order_goods_num orderAllGoodsCount,
            a.order_state orderStateId,
            a.create_time crateTime
        from
            t_info_order a
            left join t_info_store b
            on a.store_id = b.store_id
        where a.order_id = #{orderId}
        and a.is_deleted = 0
    </select>

    <!--查询订单商品列表信息-->
    <select id="listGoods" parameterType="java.lang.String" resultType="com.xzsd.app.clientOrder.entity.GoodsList">
        select
            a.goods_id goodsId,
            a.goods_count cartGoodsCount,
            b.goods_name goodsName,
            b.goods_image_path goodsImagePath,
            b.goods_describe goodsDescribe,
            b.goods_price goodsPrice
        from t_info_order_deepen a
        left join t_info_goods b
        on a.goods_id = b.goods_id
        where a.is_deleted = 0
        and a.order_id = #{orderId}
        order by a.create_time desc
    </select>

    <!--新增商品评价-->
    <insert id="addGoodsEvaluate" parameterType="com.xzsd.app.clientOrder.entity.EvaluateList">
        insert into t_info_goods_evaluate
            (
            evaluate_id
            order_id,
            goods_id,
            evaluate_content,
            evaluate_score,
            is_deleted,
            create_time,
            create_user,
            update_time,
            update_user,
            version
            )
        values
            (
            #{evaluate_id},
            #{order_id},
            #{goods_id},
            #{evaluate_content},
            #{evaluate_score},
            0,
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0
            )
    </insert>
</mapper>