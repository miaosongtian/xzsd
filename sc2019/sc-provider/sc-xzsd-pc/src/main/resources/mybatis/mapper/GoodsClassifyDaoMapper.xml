<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.goodsClassify.dao.GoodsClassifyDao">
    <!--新增商品-->
    <insert id="addGoodsClassify" parameterType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyInfo">
        insert into t_info_goods_classify
            (
            classify_id,
            classify_name,
            classify_parent,
            classify_comment,
            is_deleted,
            create_time,
            create_user,
            update_time,
            update_user,
            version
            )
        values
            (
            #{classifyId},
            #{classifyName},
            #{classifyParent},
            #{classifyComment},
            0,
            now(),
            #{createBy},
            now(),
            #{lastModifiedBy},
            0
            )
    </insert>

    <!--统计一级分类下二级分类数量-->
    <select id="countTwoClassify" parameterType="java.lang.String" resultType="int">
        select
            count(classify_id)
        from t_info_goods_classify
        where classify_parent = #{classifyId}
        and is_deleted = 0
    </select>

    <!--统计二级分类下商品数量-->
    <select id="countGoods" parameterType="java.lang.String" resultType="int">
        select
            count(goods_id)
        from t_info_goods
        where two_classify_id = #{classifyId}
        and is_deleted = 0
    </select>

    <!--删除商品分类-->
    <update id="deleteGoodsClassify" parameterType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyInfo">
        update t_info_goods_classify
        set
            is_deleted = 1,
            update_time = now(),
            update_user = #{lastModifiedBy},
            version = version + 1
        where classify_id = #{classifyId}
    </update>

    <!--修改商品分类-->
    <update id="updateGoodsClassify" parameterType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyInfo">
        update t_info_goods_classify
        set
            classify_name                 = #{classifyName},
            classify_parent               = #{classifyParent},
            classify_comment              = #{classifyComment},
            update_time                   = now(),
            update_user                   = #{lastModifiedBy},
            version                       = version + 1
        where classify_id = #{classifyId}
        and version = #{version}
    </update>

    <!--查询商品分类详情-->
    <select id="getGoodsClassify" parameterType="java.lang.String" resultType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyInfo">
        select
            classify_id classifyId,
            classify_name classifyName,
            classify_parent classifyParent,
            classify_comment classifyComment,
            version version
        from t_info_goods_classify
        where classify_id = #{classifyId}
        and is_deleted = 0
    </select>

    <!--查询商品分类列表映射-->
    <resultMap id="oneClassifyList" type="com.xzsd.pc.goodsClassify.entity.GoodsClassifyVo1">
        <id column="classify_id" property="classifyId" jdbcType="VARCHAR"/>
        <result column="classify_name" property="classifyName" jdbcType="VARCHAR"/>
        <result column="classify_parent" property="classifyParent" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
        <collection property="twoClassifyList" ofType="com.xzsd.pc.goodsClassify.entity.GoodsClassifyVo2">
            <id column="sec_classify_id" property="classifyId" jdbcType="VARCHAR"/>
            <result column="sec_classify_name" property="classifyName" jdbcType="VARCHAR"/>
            <result column="sec_classify_parent" property="classifyParent" jdbcType="VARCHAR"/>
            <result column="sec_version" property="version" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <!--查询商品分类列表-->
    <select id="listAllGoodsClassify" resultMap="oneClassifyList">
        select
            a.classify_id,
            a.classify_name,
            a.classify_parent,
            a.version,
            b.classify_id as sec_classify_id,
            b.classify_name as sec_classify_name,
            b.classify_parent as sec_classify_parent,
            b.version as sec_version
        from t_info_goods_classify a
        left join
            (select
                classify_id,
                classify_name,
                classify_parent,
                version
			from t_info_goods_classify
			where is_deleted = 0) b
        on a.classify_id = b.classify_parent
        where a.classify_parent = '0'
        and a.is_deleted = 0
        order by a.create_time desc
    </select>
</mapper>