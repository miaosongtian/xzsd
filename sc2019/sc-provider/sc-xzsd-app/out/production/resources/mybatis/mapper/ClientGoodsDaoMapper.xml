<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.clientGoods.dao.ClientGoodsDao">
    <!--查询一级分类-->
    <select id="listOneGoodsClassify"  resultType="com.xzsd.app.clientGoods.entity.ClassifyListVO">
        select
            classify_id classifyId,
            classify_name classifyName
        from t_info_goods_classify
        where is_deleted = 0
        and classify_parent = '0'
        order by create_time desc
    </select>

    <!--查询二级分类和商品映射-->
    <resultMap id="twoClassifyList" type="com.xzsd.app.clientGoods.entity.ClassifyListVO">
        <id column="classify_id" property="classifyId" jdbcType="VARCHAR"/>
        <result column="classify_name" property="classifyName" jdbcType="VARCHAR"/>
        <collection property="goodsList" ofType="com.xzsd.app.clientGoods.entity.GoodsListVO">
            <id column="goodsId" property="goodsId" jdbcType="VARCHAR"/>
            <result column="goodsName" property="goodsName" jdbcType="VARCHAR"/>
            <result column="goodsImagePath" property="goodsImagePath" jdbcType="VARCHAR"/>
            <result column="goodsPrice" property="goodsPrice" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <!--查询二级分类和商品-->
    <select id="listGetClassGoods"  parameterType="java.lang.String" resultMap="twoClassifyList">
        select
            a.classify_id,
            a.classify_name,
            b.goods_id as goodsId,
            b.goods_name as goodsName,
            b.goods_image_path as goodsImagePath,
            b.goods_price as goodsPrice
        from t_info_goods_classify a
        left join (
            select
                goods_id,
                goods_name,
                goods_image_path,
                goods_price,
                two_classify_id
            from t_info_goods
            where is_deleted = 0
            and goods_state_id = 1) b
        on b.two_classify_id = a.classify_id
        where a.is_deleted = 0
        and a.classify_parent = #{classifyId}
        order by a.create_time desc
    </select>

    <!--查询商品信息详情-->
    <select id="getGoods"  parameterType="java.lang.String" resultType="com.xzsd.app.clientGoods.entity.GetGoodsVO">
        select
            goods_name goodsName,
            isbn isbn,
            goods_id goodsId,
            goods_describe goodsDescribe,
            goods_price goodsPrice,
            goods_image_path goodsImagePath,
            goods_evaluate_score goodsEvaluateScore,
            goods_author goodsAuthor,
            goods_press goodsPress
        from t_info_goods
        where goods_id = #{goodsId}
    </select>

    <!--统计浏览量-->
    <update id="countViewsNum" parameterType="java.lang.String" >
        update t_info_goods
        set
            goods_views_num = goods_views_num + 1
        where goods_id = #{goodsId}
    </update>

    <!--查询商品送往门店名称-->
    <select id="getGoodsStoreName"  parameterType="java.lang.String" resultType="java.lang.String">
        select
            store_name storeName
        from t_info_store
        where invite_code in(
            select invite_num
            from t_sys_user
            where user_code = #{userCode})
    </select>

    <!--查询商品评价列表-->
    <select id="listGoodsEvaluatesByPage"  parameterType="com.xzsd.app.clientGoods.entity.EvaluatesIn" resultType="com.xzsd.app.clientGoods.entity.EvaluatesOut">
        select
            a.user_acct userAcct,
            b.evaluate_content evaluateContent,
            b.evaluate_score evaluateScore,
            b.create_time createTime
        from t_sys_user a
        left join t_info_goods_evaluate b
        on a.user_code = b.create_user
        where b.is_deleted = 0
        <if test="goodsId != null and goodsId != ''">
            and b.goods_id like concat('%', #{goodsId}, '%')
        </if>
        <if test="evaluateScore != null and evaluateScore != ''">
            and b.evaluate_score like concat('%', #{evaluateScore}, '%')
        </if>
    </select>
</mapper>